---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: url-shortener-deployment
  labels:
    app: url-shortener
    tier: backend
    environment: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: url-shortener
      tier: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: url-shortener
        tier: backend
        environment: production
    spec:
      containers:
      - name: url-shortener
        image: {{ ECR_REPOSITORY_URL }}:{{ BUILD_NUMBER }}
        imagePullPolicy: Always
        ports:
        - containerPort: 8001
          name: http
          protocol: TCP
        
        env:
        # Node.js environment
        - name: NODE_ENV
          value: "production"
        
        # Application port
        - name: PORT
          value: "8001"
        
        # MongoDB connection string
        # Format: mongodb://username:password@host:port/database?options
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: docdb-secret
              key: connection-string
        
        # Database username (alternative approach - individual fields)
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: docdb-secret
              key: username
              optional: true
        
        # Database password (alternative approach - individual fields)
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: docdb-secret
              key: password
              optional: true
        
        # Database host
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: docdb-secret
              key: host
              optional: true
        
        # Database port
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: docdb-secret
              key: port
              optional: true
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      
      restartPolicy: Always
      
      # Ensure pods are distributed across different nodes for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - url-shortener
              topologyKey: kubernetes.io/hostname
