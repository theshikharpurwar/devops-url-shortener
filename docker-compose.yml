services:
  # MongoDB Database Service
  mongo:
    image: mongo:latest
    container_name: url-shortener-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: url-shortener
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    networks:
      - url-shortener-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  # Node.js API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: url-shortener-api
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      NODE_ENV: production
      PORT: 8001
      MONGO_URL: mongodb://mongo:27017/url-shortener
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - url-shortener-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8001/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Named volumes for data persistence
volumes:
  mongo-data:
    driver: local
  mongo-config:
    driver: local

# Custom network for service communication
networks:
  url-shortener-network:
    driver: bridge
